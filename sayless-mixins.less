/*
    SAY:LESS 4.1.0
    --------------

    Original:
        - Mark Otto (http://markdotto.com/bootstrap)

    Fork and addons by:
        - Vaclav Vancura / SAY Media (vvancura@saymedia.com)
        - Alex Schleifer / SAY Media (alexoid@saymedia.com)
*/



/* ========== */
/* = Mixins = */
/* ========== */



@import "sayless";



// ClearFix for clearing floats like a boss
// ----------------------------------------

.clearfix() {
    zoom: 1;

    &:after {
        display: block;
        visibility: hidden;
        height: 0;
        clear: both;
        content: ".";
    }
}

// Jeff Starr method, http://perishablepress.com/new-clearfix-hack/
.clearfix-starr() {
    display: inline-block;

    &:after {
        visibility: hidden;
       	display: block;
       	font-size: 0;
       	content: " ";
       	clear: both;
       	height: 0;
    }
}

* html .clearfix-starr             { zoom: 1; } // IE6
*:first-child+html .clearfix-starr { zoom: 1; } // IE7

// Nicolas Gallagher micro method, http://nicolasgallagher.com/micro-clearfix-hack/
.clearfix-micro:before,
.clearfix-micro:after {
    content: "";
    display: table;
    height: 0; // Opera
}

.clearfix-micro:after {
    clear: both;
}

.clearfix-micro { *zoom: 1; } // IE6 + IE7



// Center-align a block level element
// ----------------------------------

.center-block() {
    display: block;
    margin: 0 auto;
}



// Sizing shortcuts
// ----------------

.size(@height: 1rem, @width: 1rem) {
    height: @height;
    width: @width;
}

.square(@size: 1rem) {
    .size(@size, @size);
}



// Input placeholder text
// ----------------------

.placeholder(@color: @grayLight) {
    :-webkit-placeholder,
    :-moz-placeholder,
    :-o-placeholder,
    :-ms-placeholder {
        color: @color;
    }

    ::-webkit-input-placeholder,
    ::-moz-input-placeholder,
    ::-o-input-placeholder,
    ::-ms-input-placeholder,
    ::-khtml-input-placeholder,
    ::input-placeholder {
        color: @color;
    }
}



// Font stacks
// -----------

// Note: keep site-specific properties out of the sayless.less file!

#font {
    .shorthand(@weight: normal, @size: 1rem, @lineHeight: @globalLineHeight) {
        font-size: @size;
        font-weight: @weight;
        line-height: @lineHeight;
    }

    .sans-serif(@weight: normal, @size: 1rem, @lineHeight: @globalLineHeight) {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        font-size: @size;
        font-weight: @weight;
        line-height: @lineHeight;
    }

    .serif(@weight: normal, @size: 1rem, @lineHeight: @globalLineHeight) {
        font-family: "Georgia", Times New Roman, Times, sans-serif;
        font-size: @size;
        font-weight: @weight;
        line-height: @lineHeight;
    }

    .monospace(@weight: normal, @size: 1rem, @lineHeight: @globalLineHeight) {
        font-family: "Monaco", Courier New, monospace;
        font-size: @size;
        font-weight: @weight;
        line-height: @lineHeight;
    }
}



// Grid system
// -----------

.column-container(@gridColumns: 16, @gridColumnWidth: 4rem, @gridGutterWidth: 2rem) {
    width: (@gridColumns * @gridColumnWidth) + (@gridGutterWidth * (@gridColumns - 1));
    margin: 0 auto;

    .clearfix();
}

.column-width(@width: 100px) {
    display: inline;
    float: left;
    width: @width;
}

.columns(@columnSpan: 1) {
    @width: (@gridColumnWidth * @columnSpan) + (@gridGutterWidth * (@columnSpan - 1));

    .column-width(@width);

    margin-left: @gridGutterWidth;

    &:first-child {
        margin-left: 0;
    }
}

.offset(@columnOffset: 1) {
    margin-left: (@gridColumnWidth * @columnOffset) + (@gridGutterWidth * (@columnOffset - 1)) !important;
}



// Border radius
// -------------

.border-radius(@radius: 1rem) {
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    -o-border-radius: @radius;
    -ms-border-radius: @radius;
    -khtml-border-radius: @radius;
    border-radius: @radius;

    .bleedfix();
}

.border-radiuses(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
    -webkit-border-top-right-radius: @topright;
    -webkit-border-bottom-right-radius: @bottomright;
    -webkit-border-bottom-left-radius: @bottomleft;
    -webkit-border-top-left-radius: @topleft;

    -moz-border-radius-topright: @topright;
    -moz-border-radius-bottomright: @bottomright;
    -moz-border-radius-bottomleft: @bottomleft;
    -moz-border-radius-topleft: @topleft;

    -o-border-radius-topright: @topright;
    -o-border-radius-bottomright: @bottomright;
    -o-border-radius-bottomleft: @bottomleft;
    -o-border-radius-topleft: @topleft;

    -ms-border-radius-topright: @topright;
    -ms-border-radius-bottomright: @bottomright;
    -ms-border-radius-bottomleft: @bottomleft;
    -ms-border-radius-topleft: @topleft;

    -khtml-border-radius-topright: @topright;
    -khtml-border-radius-bottomright: @bottomright;
    -khtml-border-radius-bottomleft: @bottomleft;
    -khtml-border-radius-topleft: @topleft;

    border-top-right-radius: @topright;
    border-bottom-right-radius: @bottomright;
    border-bottom-left-radius: @bottomleft;
    border-top-left-radius: @topleft;

    .bleedfix();
}



// Bleeding box fix
// ----------------
// http://tumble.sneak.co.nz/post/928998513/fixing-the-background-bleed
// Has to be used after all other background shortcodes

.bleedfix() {
    -webkit-background-clip: padding-box;
    -moz-background-clip: padding;
    background-clip: padding-box;
}



// Box sizing
// ----------

.box-sizing(@sizing: border-box) {
    -moz-box-sizing: @sizing;
    -webkit-box-sizing: @sizing;
    box-sizing: @sizing;
}



// Don't allow to select text
// --------------------------

.no-user-select() {
    -webkit-user-select: none;
    -moz-user-select: none;
    -o-user-select: none;
    -ms-user-select: none;
    -khtml-user-select: none;
    user-select: none;
}

.force-user-select() {
    -webkit-user-select: text !important;
    -moz-user-select: text !important;
    -o-user-select: text !important;
    -ms-user-select: text !important;
    -khtml-user-select: text !important;
    user-select: text !important;
}



// Drop shadows
// ------------

.box-shadow(@shadow: 0 0.33rem 0.33rem @black25) {
    -webkit-box-shadow: @shadow;
    -moz-box-shadow: @shadow;
    -o-box-shadow: @shadow;
    -ms-box-shadow: @shadow;
    -khtml-box-shadow: @shadow;
    box-shadow: @shadow;
}

.drop-shadow(@x-axis: 0, @y-axis: 0.33rem, @blur: 0.33rem, @alpha: 0.25) {
    -webkit-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
    -moz-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
    -o-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
    -ms-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
    -khtml-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
    box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
}

.inner-shadow(@horizontal: 0, @vertical: 1px, @blur: 2px, @alpha: 0.4) {
    -webkit-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
    -moz-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
    -o-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
    -ms-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
    -kthml-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
    box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}

.box-shadows-2(@shadow1: 0px 1px 2px @black33, @shadow2: 0px 0px 20px @black5 inset) {
    -webkit-box-shadow: @shadow1, @shadow2;
    -moz-box-shadow: @shadow1, @shadow2;
    -o-box-shadow: @shadow1, @shadow2;
    -ms-box-shadow: @shadow1, @shadow2;
    -khtml-box-shadow: @shadow1, @shadow2;
    box-shadow: @shadow1, @shadow2;
}



// Borders
// -------

.bordered(@top-color: #eee, @right-color: #eee, @bottom-color: #eee, @left-color: #eee) {
    border-top: solid 1px @top-color;
    border-left: solid 1px @left-color;
    border-right: solid 1px @right-color;
    border-bottom: solid 1px @bottom-color;
}

.debug() {
    border: 1px red dotted;
}

.debug-f() {
    background: red !important;
    background: rgba(255,0,0,0.5) !important;
}



// Transforms
// ----------

.transform-rotation(@deg: 5deg) {
    -webkit-transform: rotate(@deg);
    -moz-transform: rotate(@deg);
    -o-transform: rotate(@deg);
    -ms-transform: rotate(@deg);
    -khtml-transform: rotate(@deg);
    transform: rotate(@deg);
}

.transform-scale(@ratio: 1.5) {
    -webkit-transform: scale(@ratio);
    -moz-transform: scale(@ratio);
    -o-transform: scale(@ratio);
    -ms-transform: scale(@ratio);
    -khtml-transform: scale(@ratio);
    transform: scale(@ratio);
}

.transform-skewX(@deg: 5deg) {
    -webkit-transform: skewX(@deg);
    -moz-transform: skewX(@deg);
    -o-transform: skewX(@deg);
    -ms-transform: skewX(@deg);
    -khtml-transform: skewX(@deg);
    transform: skewX(@deg);
}

.transform-skewY(@deg: 5deg) {
    -webkit-transform: skewY(@deg);
    -moz-transform: skewY(@deg);
    -o-transform: skewY(@deg);
    -ms-transform: skewY(@deg);
    -khtml-transform: skewY(@deg);
    transform: skewY(@deg);
}



// Transitions
// -----------

.transition(@transition: all ease-in-out 0.2s) {
    -webkit-transition: @transition;
    -moz-transition: @transition;
    -o-transition: @transition;
    -ms-transition: @transition;
    -khtml-transition: @transition;
    transition: @transition;
}

.appear-transition(@transition: opacity 0.9s, @delay: 0.5s) {
    -webkit-transition: @transition;
    -moz-transition: @transition;
    -o-transition: @transition;
    -ms-transition: @transition;
    -khtml-transition: @transition;
    transition: @transition;

    -webkit-transition-delay: @delay;
    -moz-transition-delay: @delay;
    -o-transition-delay: @delay;
    -ms-transition-delay: @delay;
    -khtml-transition-delay: @delay;
    transition-delay: @delay;
}

.transition-duration(@duration: 0.2s) {
    -webkit-transition-duration: @duration;
    -moz-transition-duration: @duration;
    -o-transition-duration: @duration;
    -ms-transition-duration: @duration;
    -khtml-transition-duration: @duration;
    transition-duration: @duration;
}

.transition-delay(@delay: 0.5s) {
    -webkit-transition-delay: @delay;
    -moz-transition-delay: @delay;
    -o-transition-delay: @delay;
    -ms-transition-delay: @delay;
    -khtml-transition-delay: @delay;
    transition-delay: @delay;
}



// Translate
// ---------

.translate(@x:0, @y:0) {
    -webkit-transform: translate(@x, @y);
    -moz-transform: translate(@x, @y);
    -o-transform: translate(@x, @y);
    -ms-transform: translate(@x, @y);
    -khtml-transform: translate(@x, @y);
    transform: translate(@x, @y);
}



// CSS3 content columns
// --------------------

.content-columns(@columnCount: 5, @columnGap: 1rem) {
    -webkit-column-count: @columnCount;
    -moz-column-count: @columnCount;
    -o-column-count: @columnCount;
    -ms-column-count: @columnCount;
    -khtml-column-count: @columnCount;
    column-count: @columnCount;

    -webkit-column-gap: @columnGap;
    -moz-column-gap: @columnGap;
    -o-column-gap: @columnGap;
    -ms-column-gap: @columnGap;
    -khtml-column-gap: @columnGap;
    column-gap: @columnGap;
}



// Buttons
// -------

.button(@color: #f5f5f5, @textColor: #333, @textShadow: 0 @hairline @hairline @white75, @fontSize: 1rem, @padding: 1rem 2rem, @borderRadius: 1rem) {
    display: inline-block;
    padding: @padding;
    text-shadow: @textShadow;
    color: @textColor;
    font-size: @fontSize;
    line-height: @globalLineHeight;

    #gradient > .vertical(@color,darken(saturate(@color,10),10));

    @shadow: inset 0 @hairline 0 @white25, inset 0 -@hairline 0 @black25, 0 @hairline 0.2rem @black25;

    .border-radius(@borderRadius);
    .box-shadow(@shadow);

    &:hover {
        background-position: 0 -2rem;
        color: @textColor;
        text-decoration: none;
    }
}



// Add an alphatransparency value to any background or border color
// ----------------------------------------------------------------
// (via Elyse Holladay)

.translucent-background(@color: @white, @alpha: 1) {
    background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
}

.translucent-border(@color: @white, @alpha: 1) {
    border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
    background-clip: padding-box;
}



// Opacity
// -------

.alpha(@opacity: 1) {
    filter: e(%("alpha(opacity=%d)", @opacity / 100));
    -khtml-opacity: @opacity;
    -moz-opacity: @opacity;
    opacity: @opacity;
}

.opacity(@opacity: 1) {
    .alpha(@opacity);
}



// Hide text functions
// -------------------

.hide-text-oldschoold() {
    text-indent: -999px;
}

// Kellum Method, http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/

// Benefits:
// * Really long strings of text will never flow into the container because they always flow away from
//   the container.
// * Performance is dramatically improved because a 9999px box is not drawn. Noticeably so in animations
//   on the iPad 1

.hide-text-kellum() {
    text-indent: 100%;
    white-space: nowrap;
    overflow: hidden;
}

// Nicolas Neal-Gallagher Method, http://nicolasgallagher.com/another-css-image-replacement-technique/

// Benefits:
// * Works in IE6/7 on inline-block elements. Techniques based on text indentation are basically “broken”,
//   as shown by this test case: http://jsfiddle.net/necolas/QZvYa/show/
// * Doesn’t result in any offscreen box being created. The text-indent methods result in a box being drawn
//   (sometimes offscreen) for any text that have been negatively or positively indented. It can sometimes
//   cause performance problems but the font-based method sidesteps those concerns.
// * No need to specify a text-alignment and hide the overflow since the text is crushed to take up no space.
// * No need to hide br or make all fallback HTML display:inline to get around the constraints of using
//   a text indentation. This method is not affected by those problems.
// * Fewer styles are needed as a result of these improvements

// Drawbacks:
// * Leaves a very small trace of the text in IE6.
// * This approach means that you cannot use em units for margins on elements that make use of this image
//   replacement code. This is because the font size is set to 0.
// * Windows-Eyes has a bug that prevents the reading of text hidden using this method. There are no problems
//   with all other screenreaders that have been tested. Thanks to @jkiss for providing these detailed results
//   and to @wilto for confirming this technique works for JAWS 12 in IE 6/7/8 and Firefox 4/5/6.
// * Like so many IR methods, it doesn’t work when CSS is loaded but images are not.
// * Text may not be hidden if a visitor is using a user style sheet which has explicitly set important
//   font-size declarations for the element type on which you have applied the IR class.

.hide-text-nealgallagher() {
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
}


// Background size
// ---------------

.background-size(@size) {
    -webkit-background-size: @size;
    -moz-background-size: @size;
    -o-background-size: @size;
    -ms-background-size: @size;
    -khtml-background-size: @size;
    background-size: @size;
}


// Sprites
// -------

.sprite(@url, @position, @width, @height){
    background-image: url(@url);
    background-position: @position;
    width: @width;
    height: @height;
}

.sprite-fg(@url){
    display: inline-block;
    overflow: hidden;
    background-repeat: no-repeat;
    background-image: url(@url);
}

.sprite-bg(@url){
    background-repeat: no-repeat;
    background-image: url(@url);
}


// Fonts
// -----

.font(@fontSize: 16px, @lineHeight: @globalLineHeight) {
    font-size: @fontSize;
    line-height: @lineHeight;
}
